
plugins {
    id "dev.clojurephant.clojure" version "0.8.0-beta.7"
    id "java-library"
    id 'maven-publish'
    id 'signing'
}

version = "0.4.0"
group = "com.insilicalabs"


// See Swing Builder for the publishing stuff to add here.
// Try to publish to Clojars, not Maven Central.

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
    maven {
        name "Clojars"
        url "https://repo.clojars.org"
    }
}

dependencies {
    /*
     * The api configuration must be used in order for dependencies to be included in parent projects or composite
     * builds.
     * See https://github.com/clojurephant/clojurephant/issues/191
     */
    api 'org.clojure:clojure:1.10.3'
    api 'com.miglayout:miglayout-swing:11.0'
    api 'org.clojure:tools.logging:1.2.4'
    api 'org.clojure:core.async:1.5.648'
}

clojure {
    builds {
        main {
            aotNamespaces.add("retroact.swing.compiled.jtable")
            aotNamespaces.add("retroact.swing.compiled.jtree")
            aotNamespaces.add("retroact.swing.compiled.retroact-invocation-event")
            aotNamespaces.add("retroact.swing.compiled.retroact-event-queue")
            aotNamespaces.add("retroact.swing.compiled.transferable")
        }
    }
}

sourceSets {
    main {
        output.getClassesDirs().from(sourceSets.main.clojure.srcDirs)
    }
}

checkClojure {
    dependsOn compileClojure
    // This is necessary even though the sourceSets classesDir was modified
    classpath.from(clojure.builds.main.outputDir)
}

// The following duplicates a later clojureRepl. Perhaps combine the two.
clojureRepl {
    dependsOn compileClojure
    // I'm not sure if this is necessary, but it was for checkClojure, so I leave it here until I can test.
    classpath.from(clojure.builds.main.outputDir)
}

compileTestClojure {
    // I'm not sure if this is necessary, but it was for checkClojure, so I leave it here until I can test.
    classpath.from(clojure.builds.main.sourceRoots)
}

clojureRepl {
    // I'm not sure if this is necessary, but it was for checkClojure, so I leave it here until I can test.
    // Or maybe it's not necessary at all. I notice there are two extensions I made for clojureRepl.
    classpath.from(clojure.builds.main.sourceRoots)
    classpath.from(clojure.builds.main.outputDir)
}

/*
 * The following allows dependencies of this project to propagate to parent projects and Clojurephant. This is one
 * approach. Another can be seen in the github issue link below.
 *
 * See https://github.com/clojurephant/clojurephant/issues/191
 */
/*
configurations.apiElements {
    extendsFrom(configurations.implementation)
}
*/

java {
    withJavadocJar()
    withSourcesJar()
}

publishing {
    publications {
        retroact(MavenPublication) {
            artifactId "retroact"
            from components.java
            // ensure dependency versions get locked at time of publication
            versionMapping {
                usage('java-api') {
                    fromResolutionOf('runtimeClasspath')
                }
                usage('java-runtime') {
                    fromResolutionResult()
                }
            }
            pom {
                name = 'Retroact'
                description = 'Functional reactive programing for legacy applications. Supports Java Swing, uses Clojure as the main language, and considers the view as a function of state.'
                url = 'https://github.com/jzwolak/retroact'
                licenses {
                    license {
                        name = 'MIT License'
                        url = 'https://opensource.org/licenses/MIT'
                    }
                }
                developers {
                    developer {
                        id = 'jzwolak'
                        name = 'Jason Zwolak'
                        email = 'jzwolak@gmail.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/jzwolak/retroact.git'
                    developerConnection = 'scm:git:ssh://github.com/jzwolak/retroact.git'
                    url = 'https://github.com/jzwolak/retroact.git'
                }
            }
        }
    }
    repositories {
        maven {
            // file repo for test publishing:
            name "buildDirRepo"
            url = layout.buildDirectory.dir("repo")
        }
        if (project.hasProperty('clojarsUsername') && project.hasProperty('clojarsPassword')) {
            maven {
                name "Clojars"
                url "https://clojars.org/repo"
                credentials {
                    username clojarsUsername
                    password clojarsPassword
                }
            }
        } else {
            println "clojarsUsername or clojarsPassword not present. Publishing to maven central disabled."
        }
    }
}
